{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoDao","ConnectionFactory","NegociacaoService","http","get","then","negociacoes","map","Date","o","data","quantidade","valor","catch","console","error","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","Erro","negociacao","getConnection","conexao","dao","adiciona","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from \"./HttpService\";\r\nimport {Negociacao} from \"../models/Negociacao\";\r\nimport {NegociacaoDao} from \"../dao/NegociacaoDao\";\r\nimport {ConnectionFactory} from \"./ConnectionFactory\";\r\n\r\nexport class NegociacaoService {\r\n    constructor() {\r\n        this.http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return this.http.get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(o => new Negociacao(new Date(o.data), o.quantidade, o.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana')\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this.http.get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(o => new Negociacao(new Date(o.data), o.quantidade, o.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this.http.get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(o => new Negociacao(new Date(o.data), o.quantidade, o.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ])\r\n        .then(periodos => {\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n            return negociacoes;\r\n        })\r\n        .catch(erro => {\r\n            console.error(erro);\r\n            throw new Erro(erro);\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => \"Negociação cadastrada com sucesso\")\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação\");\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error(\"Não foi possível listar negociações\");\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error(\"Não foi possível apagar negociações\");\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.some(negociacaoExistente => \r\n                        negociacao.isEquals(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error(\"Não foi possível importar as negociações\");\r\n            });\r\n    }\r\n}"]}